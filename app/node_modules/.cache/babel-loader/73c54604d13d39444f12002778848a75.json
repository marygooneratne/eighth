{"ast":null,"code":"import React, { useImperativeHandle, forwardRef } from \"react\";\nimport { Chart } from \"frappe-charts/dist/frappe-charts.min.esm\";\nconst ReactFrappeChart = forwardRef((props, parentRef) => {\n  const ref = React.useRef(null);\n  const chart = React.useRef(null);\n  const {\n    onDataSelect\n  } = props;\n  useImperativeHandle(parentRef, () => ({\n    export: () => {\n      if (chart && chart.current) {\n        chart.current.export();\n      }\n    }\n  }));\n  React.useEffect(() => {\n    chart.current = new Chart(ref.current, Object.assign({\n      isNavigable: onDataSelect !== undefined\n    }, props));\n\n    if (onDataSelect) {\n      chart.current.parent.addEventListener(\"data-select\", e => {\n        e.preventDefault();\n        onDataSelect(e);\n      });\n    }\n  }, []);\n  React.useEffect(() => {\n    chart.current.update(props.data);\n  }, [props.data]);\n  return React.createElement(\"div\", {\n    ref: ref\n  });\n});\nexport default ReactFrappeChart;","map":{"version":3,"sources":["/Users/Goon/Desktop/eighth/app/node_modules/react-frappe-charts/build/index.js"],"names":["React","useImperativeHandle","forwardRef","Chart","ReactFrappeChart","props","parentRef","ref","useRef","chart","onDataSelect","export","current","useEffect","Object","assign","isNavigable","undefined","parent","addEventListener","e","preventDefault","update","data","createElement"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,mBAAhB,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,KAAT,QAAsB,0CAAtB;AACA,MAAMC,gBAAgB,GAAGF,UAAU,CAAC,CAACG,KAAD,EAAQC,SAAR,KAAsB;AACtD,QAAMC,GAAG,GAAGP,KAAK,CAACQ,MAAN,CAAa,IAAb,CAAZ;AACA,QAAMC,KAAK,GAAGT,KAAK,CAACQ,MAAN,CAAa,IAAb,CAAd;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAmBL,KAAzB;AACAJ,EAAAA,mBAAmB,CAACK,SAAD,EAAY,OAAO;AAClCK,IAAAA,MAAM,EAAE,MAAM;AACV,UAAIF,KAAK,IAAIA,KAAK,CAACG,OAAnB,EAA4B;AACxBH,QAAAA,KAAK,CAACG,OAAN,CAAcD,MAAd;AACH;AACJ;AALiC,GAAP,CAAZ,CAAnB;AAOAX,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AAClBJ,IAAAA,KAAK,CAACG,OAAN,GAAgB,IAAIT,KAAJ,CAAUI,GAAG,CAACK,OAAd,EAAuBE,MAAM,CAACC,MAAP,CAAc;AAAEC,MAAAA,WAAW,EAAEN,YAAY,KAAKO;AAAhC,KAAd,EAA2DZ,KAA3D,CAAvB,CAAhB;;AACA,QAAIK,YAAJ,EAAkB;AACdD,MAAAA,KAAK,CAACG,OAAN,CAAcM,MAAd,CAAqBC,gBAArB,CAAsC,aAAtC,EAAsDC,CAAD,IAAO;AACxDA,QAAAA,CAAC,CAACC,cAAF;AACAX,QAAAA,YAAY,CAACU,CAAD,CAAZ;AACH,OAHD;AAIH;AACJ,GARD,EAQG,EARH;AASApB,EAAAA,KAAK,CAACa,SAAN,CAAgB,MAAM;AAClBJ,IAAAA,KAAK,CAACG,OAAN,CAAcU,MAAd,CAAqBjB,KAAK,CAACkB,IAA3B;AACH,GAFD,EAEG,CAAClB,KAAK,CAACkB,IAAP,CAFH;AAGA,SAAOvB,KAAK,CAACwB,aAAN,CAAoB,KAApB,EAA2B;AAAEjB,IAAAA,GAAG,EAAEA;AAAP,GAA3B,CAAP;AACH,CAxBkC,CAAnC;AAyBA,eAAeH,gBAAf","sourcesContent":["import React, { useImperativeHandle, forwardRef } from \"react\";\nimport { Chart } from \"frappe-charts/dist/frappe-charts.min.esm\";\nconst ReactFrappeChart = forwardRef((props, parentRef) => {\n    const ref = React.useRef(null);\n    const chart = React.useRef(null);\n    const { onDataSelect } = props;\n    useImperativeHandle(parentRef, () => ({\n        export: () => {\n            if (chart && chart.current) {\n                chart.current.export();\n            }\n        },\n    }));\n    React.useEffect(() => {\n        chart.current = new Chart(ref.current, Object.assign({ isNavigable: onDataSelect !== undefined }, props));\n        if (onDataSelect) {\n            chart.current.parent.addEventListener(\"data-select\", (e) => {\n                e.preventDefault();\n                onDataSelect(e);\n            });\n        }\n    }, []);\n    React.useEffect(() => {\n        chart.current.update(props.data);\n    }, [props.data]);\n    return React.createElement(\"div\", { ref: ref });\n});\nexport default ReactFrappeChart;\n"]},"metadata":{},"sourceType":"module"}